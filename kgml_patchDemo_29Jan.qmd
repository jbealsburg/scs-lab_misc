---
title: "KGML Patch Demo"
subtitle: "adding `ORG` trial to Kernza Grain Machine Learning (KGML) dataset"
author: "Jesse Bealsburg"
date: "`r Sys.Date()`"
format: pdf
editor: visual
execute:
  # echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

# Retrofitting datasets for new analyses using a patch

Ideally, all of our data or at least core data (yield) is all in a database in the same format and can be pulled across trials. Reality is that each experiement exists as a silo.

## Master data

Master data is often structured so that each row is a unique site-year-plot with columns for every measurement from that plot and in a format that makes sense for collecting data in the field and processing across multiple steps in the lab.

Master data does not have a consistent format across experiments but is designed for the needs of the specific experiment

## Management data

Data like the planting date and fertilizer rate is kept in the fieldwork timeline. This data is then pulled from the fieldwork timeline into columns in the master document as needed. Most master files contain little to no management data

## Patches

Patches are files that allow for joining Master datasets with Management datasets.

A patch is like a key. It solves the problem of having to copy and paste identical data across reps/blocks which is both labor intensive and prone to error.

![Using patches, we can combine management data with master datasets into a dataset better structured to for analysis across experiments. ](kgml_patch_infographic.png)

\newpage

# Code

```{r import data}

library(tidyverse)

read.csv("kgml_data_29Jan.csv") -> masterDat
# master data, experiment-site-year-plot-yield

# csv didn't retain filter from google sheets, so filtering just for simplicity
masterDat %>% 
  filter(project == "ORG") -> masterDat

read.csv("kgml_managementData_29Jan.csv") -> managementDat
#management data, experiment-site-year-treatment-croptype

read.csv("kgml_treatmentPatch_29Jan.csv") -> trtPatch
# patch, allowing treatment numbers to be applied to plot numbers for a given experiment-site-year-plot-treatment


masterDat %>% 
  # distinct(year)
  mutate(site = fct_recode(location,
                           "st paul" = "St. Paul",
                           "lamberton" = "Lamberton",
                           "rosemount" = "Ros R54-55")) %>% 
  rename(experiment = project) -> masterDat2
# changing column names and factor values so identical terminologies used
  
trtPatch %>% 
  mutate(site = fct_recode(site,
                           "st paul" = "St. Paul",
                           "lamberton" = "Lamberton",
                           "rosemount" = "Ros R54-55")) -> trtPatch2
# changing column names and factor values so identical terminologies used

```

```{r simplifying}

managementDat %>% 
  filter(information == "Crop type") %>% 
  rename(crop = value) %>% 
  select(experiment, site, year, crop, treatment)  -> managementDat2
# changing column names for simplicity and clarity. 

masterDat2 %>% 
  select(experiment,site,year,plot) -> masterDat3

masterDat3 %>% 
  glimpse() 

managementDat2 %>% 
  glimpse()

trtPatch2 %>% 
  glimpse()
```

```{r joining}

masterDat3 %>% 
  left_join(trtPatch2) %>% 
  left_join(managementDat2) %>% 
  arrange(site,year)

```
